/*
 * This file is generated by jOOQ.
 */
package lecturemanagementdoctor.doctor.Database.doctordb.tables.records;


import javax.annotation.Generated;

import lecturemanagementdoctor.doctor.Database.doctordb.tables.Doctor;

import org.jooq.*;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DoctorRecord extends UpdatableRecordImpl<DoctorRecord> implements Record9<Integer, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 823565017;

    /**
     * Setter for <code>doctordb.Doctor.doctor_id</code>.
     */
    public void setDoctorId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_id</code>.
     */
    public Integer getDoctorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_name</code>.
     */
    public void setDoctorName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_name</code>.
     */
    public String getDoctorName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_password</code>.
     */
    public void setDoctorPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_password</code>.
     */
    public String getDoctorPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_email</code>.
     */
    public void setDoctorEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_email</code>.
     */
    public String getDoctorEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_gender</code>.
     */
    public void setDoctorGender(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_gender</code>.
     */
    public String getDoctorGender() {
        return (String) get(4);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_course</code>.
     */
    public void setDoctorCourse(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_course</code>.
     */
    public String getDoctorCourse() {
        return (String) get(5);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_phone</code>.
     */
    public void setDoctorPhone(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_phone</code>.
     */
    public String getDoctorPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_department</code>.
     */
    public void setDoctorDepartment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_dpartment</code>.
     */
    public String getDoctorDepartment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>doctordb.Doctor.doctor_database</code>.
     */
    public void setDoctorDatabase(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>doctordb.Doctor.doctor_database</code>.
     */
    public String getDoctorDatabase() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Doctor.DOCTOR.DOCTOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Doctor.DOCTOR.DOCTOR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Doctor.DOCTOR.DOCTOR_PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Doctor.DOCTOR.DOCTOR_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Doctor.DOCTOR.DOCTOR_GENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Doctor.DOCTOR.DOCTOR_COURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Doctor.DOCTOR.DOCTOR_PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Doctor.DOCTOR.DOCTOR_DEPARTMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Doctor.DOCTOR.DOCTOR_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDoctorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDoctorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDoctorPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDoctorEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDoctorGender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDoctorCourse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDoctorPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDoctorDepartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDoctorDatabase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDoctorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDoctorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDoctorPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDoctorEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDoctorGender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDoctorCourse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDoctorPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDoctorDepartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDoctorDatabase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value1(Integer value) {
        setDoctorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value2(String value) {
        setDoctorName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value3(String value) {
        setDoctorPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value4(String value) {
        setDoctorEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value5(String value) {
        setDoctorGender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value6(String value) {
        setDoctorCourse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value7(String value) {
        setDoctorPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value8(String value) {
        setDoctorDepartment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord value9(String value) {
        setDoctorDatabase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoctorRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DoctorRecord
     */
    public DoctorRecord() {
        super(Doctor.DOCTOR);
    }

    /**
     * Create a detached, initialised DoctorRecord
     */
    public DoctorRecord(Integer doctorId, String doctorName, String doctorPassword, String doctorEmail, String doctorGender, String doctorCourse, String doctorPhone, String doctorDepartment, String doctorDatabase) {
        super(Doctor.DOCTOR);

        set(0, doctorId);
        set(1, doctorName);
        set(2, doctorPassword);
        set(3, doctorEmail);
        set(4, doctorGender);
        set(5, doctorCourse);
        set(6, doctorPhone);
        set(7, doctorDepartment);
        set(8, doctorDatabase);
    }
}
