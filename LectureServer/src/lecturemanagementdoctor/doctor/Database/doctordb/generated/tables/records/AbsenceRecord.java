/*
 * This file is generated by jOOQ.
 */
package lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records;


import javax.annotation.Generated;

import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Absence;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbsenceRecord extends UpdatableRecordImpl<AbsenceRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1871463429;

    /**
     * Setter for <code>lecturedb.Absence.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lecturedb.Absence.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lecturedb.Absence.lecture_id</code>.
     */
    public void setLectureId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lecturedb.Absence.lecture_id</code>.
     */
    public Integer getLectureId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Absence.ABSENCE.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Absence.ABSENCE.LECTURE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getLectureId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLectureId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsenceRecord value1(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsenceRecord value2(Integer value) {
        setLectureId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbsenceRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AbsenceRecord
     */
    public AbsenceRecord() {
        super(Absence.ABSENCE);
    }

    /**
     * Create a detached, initialised AbsenceRecord
     */
    public AbsenceRecord(Integer studentId, Integer lectureId) {
        super(Absence.ABSENCE);

        set(0, studentId);
        set(1, lectureId);
    }
}
