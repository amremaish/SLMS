/*
 * This file is generated by jOOQ.
 */
package lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records;


import javax.annotation.Generated;

import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Studentdegrees;

import org.jooq.*;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentdegreesRecord extends TableRecordImpl<StudentdegreesRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1673545152;

    /**
     * Setter for <code>lecturedb.StudentDegrees.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lecturedb.StudentDegrees.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lecturedb.StudentDegrees.quiz_id</code>.
     */
    public void setQuizId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lecturedb.StudentDegrees.quiz_id</code>.
     */
    public Integer getQuizId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>lecturedb.StudentDegrees.degree</code>.
     */
    public void setDegree(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lecturedb.StudentDegrees.degree</code>.
     */
    public Integer getDegree() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>lecturedb.StudentDegrees.degree</code>.
     */
    public void setTotalDegree(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>lecturedb.StudentDegrees.degree</code>.
     */
    public Integer getTotalDegree() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Studentdegrees.STUDENTDEGREES.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Studentdegrees.STUDENTDEGREES.QUIZ_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Studentdegrees.STUDENTDEGREES.DEGREE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Studentdegrees.STUDENTDEGREES.TOTALDEGREE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getQuizId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getDegree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getDegree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuizId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDegree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTotalDegree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentdegreesRecord value1(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentdegreesRecord value2(Integer value) {
        setQuizId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentdegreesRecord value3(Integer value) {
        setDegree(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentdegreesRecord value4(Integer value) {
        setTotalDegree(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentdegreesRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentdegreesRecord
     */
    public StudentdegreesRecord() {
        super(Studentdegrees.STUDENTDEGREES);
    }

    /**
     * Create a detached, initialised StudentdegreesRecord
     */
    public StudentdegreesRecord(Integer studentId, Integer quizId, Integer degree, Integer totalDegree) {
        super(Studentdegrees.STUDENTDEGREES);

        set(0, studentId);
        set(1, quizId);
        set(2, degree);
        set(3, totalDegree);
    }
}
