/*
 * This file is generated by jOOQ.
 */
package lecturemanagementdoctor.doctor.Database.doctordb.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lecturemanagementdoctor.doctor.Database.doctordb.generated.Indexes;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.Keys;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.Lecturedb;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.ChoicedataRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Choicedata extends TableImpl<ChoicedataRecord> {

    private static final long serialVersionUID = -1556411259;

    /**
     * The reference instance of <code>lecturedb.ChoiceData</code>
     */
    public static final Choicedata CHOICEDATA = new Choicedata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChoicedataRecord> getRecordType() {
        return ChoicedataRecord.class;
    }

    /**
     * The column <code>lecturedb.ChoiceData.choice_id</code>.
     */
    public final TableField<ChoicedataRecord, Integer> CHOICE_ID = createField("choice_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>lecturedb.ChoiceData.choice_content</code>.
     */
    public final TableField<ChoicedataRecord, String> CHOICE_CONTENT = createField("choice_content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lecturedb.ChoiceData.question_id</code>.
     */
    public final TableField<ChoicedataRecord, Integer> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lecturedb.ChoiceData</code> table reference
     */
    public Choicedata() {
        this(DSL.name("ChoiceData"), null);
    }

    /**
     * Create an aliased <code>lecturedb.ChoiceData</code> table reference
     */
    public Choicedata(String alias) {
        this(DSL.name(alias), CHOICEDATA);
    }

    /**
     * Create an aliased <code>lecturedb.ChoiceData</code> table reference
     */
    public Choicedata(Name alias) {
        this(alias, CHOICEDATA);
    }

    private Choicedata(Name alias, Table<ChoicedataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Choicedata(Name alias, Table<ChoicedataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lecturedb.LECTUREDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHOICEDATA_CHOICEDATA_FK0, Indexes.CHOICEDATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChoicedataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHOICEDATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChoicedataRecord> getPrimaryKey() {
        return Keys.KEY_CHOICEDATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChoicedataRecord>> getKeys() {
        return Arrays.<UniqueKey<ChoicedataRecord>>asList(Keys.KEY_CHOICEDATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ChoicedataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ChoicedataRecord, ?>>asList(Keys.CHOICEDATA_FK0);
    }

    public Quizquestion quizquestion() {
        return new Quizquestion(this, Keys.CHOICEDATA_FK0);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Choicedata as(String alias) {
        return new Choicedata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Choicedata as(Name alias) {
        return new Choicedata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Choicedata rename(String name) {
        return new Choicedata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Choicedata rename(Name name) {
        return new Choicedata(name, null);
    }
}
