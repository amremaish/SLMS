/*
 * This file is generated by jOOQ.
 */
package lecturemanagementdoctor.doctor.Database.doctordb.generated;


import javax.annotation.Generated;

import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Absence;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Choicedata;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Lecture;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Quiz;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Quizquestion;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Slide;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Student;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.Studentdegrees;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.AbsenceRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.ChoicedataRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.LectureRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.QuizRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.QuizquestionRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.SlideRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.StudentRecord;
import lecturemanagementdoctor.doctor.Database.doctordb.generated.tables.records.StudentdegreesRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>lecturedb</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ChoicedataRecord, Integer> IDENTITY_CHOICEDATA = Identities0.IDENTITY_CHOICEDATA;
    public static final Identity<LectureRecord, Integer> IDENTITY_LECTURE = Identities0.IDENTITY_LECTURE;
    public static final Identity<QuizRecord, Integer> IDENTITY_QUIZ = Identities0.IDENTITY_QUIZ;
    public static final Identity<QuizquestionRecord, Integer> IDENTITY_QUIZQUESTION = Identities0.IDENTITY_QUIZQUESTION;
    public static final Identity<SlideRecord, Integer> IDENTITY_SLIDE = Identities0.IDENTITY_SLIDE;
    public static final Identity<StudentRecord, Integer> IDENTITY_STUDENT = Identities0.IDENTITY_STUDENT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChoicedataRecord> KEY_CHOICEDATA_PRIMARY = UniqueKeys0.KEY_CHOICEDATA_PRIMARY;
    public static final UniqueKey<LectureRecord> KEY_LECTURE_PRIMARY = UniqueKeys0.KEY_LECTURE_PRIMARY;
    public static final UniqueKey<QuizRecord> KEY_QUIZ_PRIMARY = UniqueKeys0.KEY_QUIZ_PRIMARY;
    public static final UniqueKey<QuizquestionRecord> KEY_QUIZQUESTION_PRIMARY = UniqueKeys0.KEY_QUIZQUESTION_PRIMARY;
    public static final UniqueKey<SlideRecord> KEY_SLIDE_PRIMARY = UniqueKeys0.KEY_SLIDE_PRIMARY;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = UniqueKeys0.KEY_STUDENT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AbsenceRecord, StudentRecord> ABSENCE_FK0 = ForeignKeys0.ABSENCE_FK0;
    public static final ForeignKey<AbsenceRecord, LectureRecord> ABSENCE_FK1 = ForeignKeys0.ABSENCE_FK1;
    public static final ForeignKey<ChoicedataRecord, QuizquestionRecord> CHOICEDATA_FK0 = ForeignKeys0.CHOICEDATA_FK0;
    public static final ForeignKey<QuizquestionRecord, QuizRecord> QUIZQUESTION_FK0 = ForeignKeys0.QUIZQUESTION_FK0;
    public static final ForeignKey<SlideRecord, LectureRecord> SLIDE_FK0 = ForeignKeys0.SLIDE_FK0;
    public static final ForeignKey<StudentdegreesRecord, StudentRecord> STUDENTDEGREES_FK0 = ForeignKeys0.STUDENTDEGREES_FK0;
    public static final ForeignKey<StudentdegreesRecord, QuizRecord> STUDENTDEGREES_FK1 = ForeignKeys0.STUDENTDEGREES_FK1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ChoicedataRecord, Integer> IDENTITY_CHOICEDATA = Internal.createIdentity(Choicedata.CHOICEDATA, Choicedata.CHOICEDATA.CHOICE_ID);
        public static Identity<LectureRecord, Integer> IDENTITY_LECTURE = Internal.createIdentity(Lecture.LECTURE, Lecture.LECTURE.LECTURE_ID);
        public static Identity<QuizRecord, Integer> IDENTITY_QUIZ = Internal.createIdentity(Quiz.QUIZ, Quiz.QUIZ.QUIZ_ID);
        public static Identity<QuizquestionRecord, Integer> IDENTITY_QUIZQUESTION = Internal.createIdentity(Quizquestion.QUIZQUESTION, Quizquestion.QUIZQUESTION.QUESTION_ID);
        public static Identity<SlideRecord, Integer> IDENTITY_SLIDE = Internal.createIdentity(Slide.SLIDE, Slide.SLIDE.SLIDE_ID);
        public static Identity<StudentRecord, Integer> IDENTITY_STUDENT = Internal.createIdentity(Student.STUDENT, Student.STUDENT.STUDENT_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ChoicedataRecord> KEY_CHOICEDATA_PRIMARY = Internal.createUniqueKey(Choicedata.CHOICEDATA, "KEY_ChoiceData_PRIMARY", Choicedata.CHOICEDATA.CHOICE_ID);
        public static final UniqueKey<LectureRecord> KEY_LECTURE_PRIMARY = Internal.createUniqueKey(Lecture.LECTURE, "KEY_Lecture_PRIMARY", Lecture.LECTURE.LECTURE_ID);
        public static final UniqueKey<QuizRecord> KEY_QUIZ_PRIMARY = Internal.createUniqueKey(Quiz.QUIZ, "KEY_Quiz_PRIMARY", Quiz.QUIZ.QUIZ_ID);
        public static final UniqueKey<QuizquestionRecord> KEY_QUIZQUESTION_PRIMARY = Internal.createUniqueKey(Quizquestion.QUIZQUESTION, "KEY_QuizQuestion_PRIMARY", Quizquestion.QUIZQUESTION.QUESTION_ID);
        public static final UniqueKey<SlideRecord> KEY_SLIDE_PRIMARY = Internal.createUniqueKey(Slide.SLIDE, "KEY_Slide_PRIMARY", Slide.SLIDE.SLIDE_ID);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = Internal.createUniqueKey(Student.STUDENT, "KEY_Student_PRIMARY", Student.STUDENT.STUDENT_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AbsenceRecord, StudentRecord> ABSENCE_FK0 = Internal.createForeignKey(Keys.KEY_STUDENT_PRIMARY, Absence.ABSENCE, "Absence_fk0", Absence.ABSENCE.STUDENT_ID);
        public static final ForeignKey<AbsenceRecord, LectureRecord> ABSENCE_FK1 = Internal.createForeignKey(Keys.KEY_LECTURE_PRIMARY, Absence.ABSENCE, "Absence_fk1", Absence.ABSENCE.LECTURE_ID);
        public static final ForeignKey<ChoicedataRecord, QuizquestionRecord> CHOICEDATA_FK0 = Internal.createForeignKey(Keys.KEY_QUIZQUESTION_PRIMARY, Choicedata.CHOICEDATA, "ChoiceData_fk0", Choicedata.CHOICEDATA.QUESTION_ID);
        public static final ForeignKey<QuizquestionRecord, QuizRecord> QUIZQUESTION_FK0 = Internal.createForeignKey(Keys.KEY_QUIZ_PRIMARY, Quizquestion.QUIZQUESTION, "QuizQuestion_fk0", Quizquestion.QUIZQUESTION.QUIZ_ID);
        public static final ForeignKey<SlideRecord, LectureRecord> SLIDE_FK0 = Internal.createForeignKey(Keys.KEY_LECTURE_PRIMARY, Slide.SLIDE, "Slide_fk0", Slide.SLIDE.LECTURE_ID);
        public static final ForeignKey<StudentdegreesRecord, StudentRecord> STUDENTDEGREES_FK0 = Internal.createForeignKey(Keys.KEY_STUDENT_PRIMARY, Studentdegrees.STUDENTDEGREES, "StudentDegrees_fk0", Studentdegrees.STUDENTDEGREES.STUDENT_ID);
        public static final ForeignKey<StudentdegreesRecord, QuizRecord> STUDENTDEGREES_FK1 = Internal.createForeignKey(Keys.KEY_QUIZ_PRIMARY, Studentdegrees.STUDENTDEGREES, "StudentDegrees_fk1", Studentdegrees.STUDENTDEGREES.QUIZ_ID);
    }
}
